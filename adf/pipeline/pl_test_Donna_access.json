{
	"name": "pl_test_Donna_access",
	"properties": {
		"activities": [
			{
				"name": "Web Ping Token",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://fedengine-dev.non-prod-pen-gcp.omers.com/as/token.oauth2",
					"connectVia": {
						"referenceName": "PENBISelfHostedIR",
						"type": "IntegrationRuntimeReference"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"body": "grant_type=client_credentials&client_id=penbi-donna-dev-svc&client_secret=rNqeJT6oNd3awc2iEvKGlD5JzEJOSSa1QBYMaWwoxA2U6lcDXHI6f6auIfUtZuSS"
				}
			},
			{
				"name": "Save Ping Token",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Web Ping Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "var_token",
					"value": {
						"value": "@activity('Web Ping Token').output.access_token",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Test Donna NFT extract",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Save Ping Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://dev-donna-api-gateway-internal.non-prod-pen-gcp.omers.com/nft/v1/staging-search",
					"connectVia": {
						"referenceName": "PENBISelfHostedIR",
						"type": "IntegrationRuntimeReference"
					},
					"method": "POST",
					"headers": {
						"applicationcode": "EA",
						"correlationid": "1223344",
						"username": "rayis",
						"Authorization": {
							"value": "@concat(string(activity('Web Ping Token').output.token_type),' ',string(activity('Web Ping Token').output.access_token))",
							"type": "Expression"
						},
						"Content-Type": "application/json"
					},
					"body": {
						"groupNo": "564100",
						"page": 1,
						"createDate": "2023-01-14"
					}
				}
			},
			{
				"name": "Test Donna Comm Framework",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Save Ping Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://dev-donna-api-gateway-internal.non-prod-pen-gcp.omers.com/comms/v1/notification/print?from=2022-11-08T00:00:00&to=2022-12-08T23:59:59&pageNumber=2&pageSize=100",
					"connectVia": {
						"referenceName": "PENBISelfHostedIR",
						"type": "IntegrationRuntimeReference"
					},
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "@concat(string(activity('Web Ping Token').output.token_type),' ',string(activity('Web Ping Token').output.access_token))",
							"type": "Expression"
						},
						"Content-Type": "application/json"
					},
					"body": {
						"groupNo": "564100",
						"page": 1,
						"createDate": "2023-01-14"
					}
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "POST",
						"requestBody": "{\"page\": 2,\"modifiedDate\": \"2022-01-01 13:18:49\",\"pageSize\": 100}",
						"additionalHeaders": {
							"correlationid": "1-1-1",
							"username": "penbi",
							"Content-Type": "application/json"
						},
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['request_no']"
								},
								"sink": {
									"name": "request_no"
								}
							},
							{
								"source": {
									"path": "['nftId']"
								},
								"sink": {
									"name": "nftId"
								}
							},
							{
								"source": {
									"path": "['groupNo']"
								},
								"sink": {
									"name": "groupNo"
								}
							},
							{
								"source": {
									"path": "['firstName']"
								},
								"sink": {
									"name": "firstName"
								}
							},
							{
								"source": {
									"path": "['lastName']"
								},
								"sink": {
									"name": "lastName"
								}
							},
							{
								"source": {
									"path": "['suffixSin']"
								},
								"sink": {
									"name": "suffixSin"
								}
							},
							{
								"source": {
									"path": "['dateOfBirth']"
								},
								"sink": {
									"name": "dateOfBirth"
								}
							},
							{
								"source": {
									"path": "['emailAddress']"
								},
								"sink": {
									"name": "emailAddress"
								}
							},
							{
								"source": {
									"path": "['addressLine1']"
								},
								"sink": {
									"name": "addressLine1"
								}
							},
							{
								"source": {
									"path": "['addressLine2']"
								},
								"sink": {
									"name": "addressLine2",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['aptSuitUnitNumber']"
								},
								"sink": {
									"name": "aptSuitUnitNumber"
								}
							},
							{
								"source": {
									"path": "['city']"
								},
								"sink": {
									"name": "city"
								}
							},
							{
								"source": {
									"path": "['province']"
								},
								"sink": {
									"name": "province"
								}
							},
							{
								"source": {
									"path": "['country']"
								},
								"sink": {
									"name": "country"
								}
							},
							{
								"source": {
									"path": "['postalCode']"
								},
								"sink": {
									"name": "postalCode"
								}
							},
							{
								"source": {
									"path": "['addressInvalidInd']"
								},
								"sink": {
									"name": "addressInvalidInd"
								}
							},
							{
								"source": {
									"path": "['addressModifiedDate']"
								},
								"sink": {
									"name": "addressModifiedDate"
								}
							},
							{
								"source": {
									"path": "['returnedMailRequestDate']"
								},
								"sink": {
									"name": "returnedMailRequestDate",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['canadaPostValidInd']"
								},
								"sink": {
									"name": "canadaPostValidInd"
								}
							},
							{
								"source": {
									"path": "['hireDate']"
								},
								"sink": {
									"name": "hireDate"
								}
							},
							{
								"source": {
									"path": "['createDate']"
								},
								"sink": {
									"name": "createDate"
								}
							},
							{
								"source": {
									"path": "['homePhone']"
								},
								"sink": {
									"name": "homePhone"
								}
							},
							{
								"source": {
									"path": "['mobilePhone']"
								},
								"sink": {
									"name": "mobilePhone"
								}
							},
							{
								"source": {
									"path": "['languagePreference']"
								},
								"sink": {
									"name": "languagePreference"
								}
							},
							{
								"source": {
									"path": "['employeeId']"
								},
								"sink": {
									"name": "employeeId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['employmentType']"
								},
								"sink": {
									"name": "employmentType"
								}
							},
							{
								"source": {
									"path": "['unionAffiliation']"
								},
								"sink": {
									"name": "unionAffiliation"
								}
							},
							{
								"source": {
									"path": "['salaryAmount']"
								},
								"sink": {
									"name": "salaryAmount"
								}
							},
							{
								"source": {
									"path": "['salaryType']"
								},
								"sink": {
									"name": "salaryType"
								}
							},
							{
								"source": {
									"path": "['status']"
								},
								"sink": {
									"name": "status",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['workflowId']"
								},
								"sink": {
									"name": "workflowId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['datasourceId']"
								},
								"sink": {
									"name": "datasourceId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['modifiedBy']"
								},
								"sink": {
									"name": "modifiedBy"
								}
							},
							{
								"source": {
									"path": "['modifiedTS']"
								},
								"sink": {
									"name": "modifiedTS"
								}
							}
						],
						"collectionReference": "$['result']['data']"
					}
				},
				"inputs": [
					{
						"referenceName": "ds_api_donna_nft",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_adls_parquet_target",
						"type": "DatasetReference",
						"parameters": {
							"container": "donna",
							"folder": "nft-member"
						}
					}
				]
			}
		],
		"variables": {
			"var_token": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Not Used"
		},
		"annotations": []
	}
}
{
	"name": "pl_02_extract_stage_SQL_RAW",
	"properties": {
		"activities": [
			{
				"name": "Just a Container",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(1, 1)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Copy Blob to Raw SQL",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set feed_stage_log_id",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.02:00:00",
								"retry": 2,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"additionalColumns": [
										{
											"name": "batch_ts",
											"value": {
												"value": "@pipeline().parameters.par_batch_ts",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": false,
										"wildcardFolderPath": {
											"value": "@concat(pipeline().parameters.par_datafeed_stage[0].SourceEntity\n,'/batch_ts='\n,pipeline().parameters.par_batch_ts\n)",
											"type": "Expression"
										},
										"wildcardFileName": "*.parquet",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "IF OBJECT_ID('@{pipeline().parameters.par_datafeed_stage[0].DestinationSchema}.@{pipeline().parameters.par_datafeed_stage[0].DestinationEntity}') IS NOT NULL truncate table @{pipeline().parameters.par_datafeed_stage[0].DestinationSchema}.@{pipeline().parameters.par_datafeed_stage[0].DestinationEntity};",
										"type": "Expression"
									},
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": true,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"parallelCopies": 24,
								"enableSkipIncompatibleRow": true,
								"validateDataConsistency": true,
								"logSettings": {
									"enableCopyActivityLog": true,
									"copyActivityLogSettings": {
										"logLevel": "Warning",
										"enableReliableLogging": false
									},
									"logLocationSettings": {
										"linkedServiceName": {
											"referenceName": "ls_adls_adfmt",
											"type": "LinkedServiceReference"
										},
										"path": "logs"
									}
								},
								"dataIntegrationUnits": 16,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_adls_parquet_source",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.par_datafeed_stage[0].SourceSchema",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_AzureSQL_Target_Table",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@pipeline().parameters.par_datafeed_stage[0].DestinationSchema",
											"type": "Expression"
										},
										"table": {
											"value": "@pipeline().parameters.par_datafeed_stage[0].DestinationEntity",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Log Feed Stage Execution",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.01:00:00",
								"retry": 2,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[cfg].[CreateFeedStageExecution]",
									"storedProcedureParameters": {
										"batch_id": {
											"type": "Int32",
											"value": {
												"value": "@pipeline().parameters.par_batch_id",
												"type": "Expression"
											}
										},
										"batch_ts": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.par_batch_ts",
												"type": "Expression"
											}
										},
										"DataFeedId": {
											"type": "Int32",
											"value": {
												"value": "@pipeline().parameters.par_DataFeedId",
												"type": "Expression"
											}
										},
										"DataStage": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.par_datafeed_stage[0].DataStage",
												"type": "Expression"
											}
										},
										"PipelineName": {
											"type": "String",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										"PipelineRunID": {
											"type": "String",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_AzureSQL_Target_Connect",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "pl_02_extract_stage validate",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Copy Blob to Raw SQL",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Set rowsSkipped",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_02_extract_stage_validate",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"par_rowsSkipped": {
										"value": "@int(variables('var_rowsSkipped'))",
										"type": "Expression"
									},
									"par_execution_status": {
										"value": "@activity('Copy Blob to Raw SQL').output.executionDetails[0].status",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Set rowsCopied",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy Blob to Raw SQL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_rowsCopied",
								"value": {
									"value": "@string(activity('Copy Blob to Raw SQL').output.rowsCopied)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set rowsRead",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy Blob to Raw SQL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_rowsRead",
								"value": {
									"value": "@string(activity('Copy Blob to Raw SQL').output.rowsRead)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set rowsSkipped",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy Blob to Raw SQL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_rowsSkipped",
								"value": {
									"value": "@string(activity('Copy Blob to Raw SQL').output.rowsSkipped)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set feed_stage_log_id",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Log Feed Stage Execution",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_feed_stage_log_id",
								"value": {
									"value": "@string(activity('Log Feed Stage Execution').output.firstRow.feed_stage_log_id)",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "SP Update Feed Stage Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Just a Container",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[cfg].[UpdateFeedStageExecutionLog]",
					"storedProcedureParameters": {
						"feed_stage_log_id": {
							"value": {
								"value": "@int(variables('var_feed_stage_log_id'))",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"RowsCopied": {
							"value": {
								"value": "@int(variables('var_rowsCopied'))",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"RowsRead": {
							"value": {
								"value": "@int(variables('var_rowsRead'))",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"UpdateStatus": {
							"value": "Success",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sql_adfmt_target",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP Update Feed Stage Failure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Just a Container",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[cfg].[UpdateFeedStageExecutionLog]",
					"storedProcedureParameters": {
						"feed_stage_log_id": {
							"value": {
								"value": "@int(variables('var_feed_stage_log_id'))",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"RowsCopied": {
							"value": {
								"value": "@int(variables('var_rowsCopied'))",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"RowsRead": {
							"value": {
								"value": "@int(variables('var_rowsRead'))",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"UpdateStatus": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sql_adfmt_target",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"par_SourceSystem": {
				"type": "string"
			},
			"par_batch_id": {
				"type": "int"
			},
			"par_batch_ts": {
				"type": "string"
			},
			"par_DataFeedId": {
				"type": "int"
			},
			"par_datafeed_stage": {
				"type": "array"
			},
			"par_DataFeedType": {
				"type": "string"
			},
			"par_TimestampColumn": {
				"type": "string"
			},
			"par_TimestampValue": {
				"type": "string"
			}
		},
		"variables": {
			"var_source_query": {
				"type": "String"
			},
			"var_rowsCopied": {
				"type": "String",
				"defaultValue": "0"
			},
			"var_rowsSkipped": {
				"type": "String",
				"defaultValue": "0"
			},
			"var_rowsRead": {
				"type": "String",
				"defaultValue": "0"
			},
			"var_feed_stage_log_id": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Data Extract"
		},
		"annotations": []
	}
}